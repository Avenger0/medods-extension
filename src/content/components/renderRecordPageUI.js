import RecordButton from '../../ui/RecordButton.svelte';
const TARGET_SELECTOR = '#show_info_table_title';
const ELEMENT_ID = 'record-button-container';

// –ï–¥–∏–Ω—ã–π –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
const state = {
  // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  mounted: false,
  intervalId: null,
  currentPath: null,
  currentRecordId: null,
  
  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  debug: true,
  instanceId: Math.random().toString(36).substring(2, 9),
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  log(type, message, ...data) {
    if (!this.debug) return;
    
    const icons = {
      info: '‚ÑπÔ∏è',
      warn: '‚ö†Ô∏è',
      error: '‚ùå',
      success: '‚úÖ',
      start: 'üöÄ',
      action: 'üîÑ',
      timer: '‚è±Ô∏è',
      mount: 'üìå',
      unmount: 'üóëÔ∏è',
      route: 'üß≠',
      check: 'üîç'
    };
    
    const icon = icons[type] || 'üìù';
    console.log(`${icon} [RecordBtn-${this.instanceId}] ${message}`, ...data);
  }
};

/**
 * –ò–∑–≤–ª–µ–∫–∞–µ—Ç ID –∑–∞–ø–∏—Å–∏ –∏–∑ URL
 * @param {string} url - URL –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
 * @returns {object} - –û–±—ä–µ–∫—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
 */
function parseUrl(url) {
  const parsedUrl = new URL(url, window.location.origin);
  const path = parsedUrl.pathname;
  
  // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è ID –∑–∞–ø–∏—Å–∏
  const match = path.match(/\/medical_records\/(\d+)\/(\d+)/);
  
  return {
    isRecordPage: !!match,
    patientId: match ? match[1] : null,
    recordId: match ? match[2] : null,
    fullPath: path + parsedUrl.search,
    params: parsedUrl.searchParams
  };
}

/**
 * –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—è–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç —Ä–µ—Å—É—Ä—Å—ã
 */
function cleanup() {
  state.log('action', '–ó–∞–ø—É—â–µ–Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –æ—á–∏—Å—Ç–∫–∏');
  
  // –û—á–∏—â–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
  if (state.intervalId !== null) {
    clearInterval(state.intervalId);
    state.log('unmount', '–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', state.intervalId);
    state.intervalId = null;
  }
  
  // –£–¥–∞–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–∑ DOM
  const existingElement = document.getElementById(ELEMENT_ID);
  if (existingElement) {
    existingElement.remove();
    state.log('unmount', '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É–¥–∞–ª–µ–Ω –∏–∑ DOM');
  }
  
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  state.mounted = false;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {boolean} force - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
 */
function checkAndMountIfNeeded(force = false) {
  const urlInfo = parseUrl(window.location.href);
  state.log('check', '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', urlInfo);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è ID –∑–∞–ø–∏—Å–∏
  const recordIdChanged = urlInfo.recordId !== state.currentRecordId;
  if (recordIdChanged) {
    state.log('route', `–ò–∑–º–µ–Ω–∏–ª—Å—è ID –∑–∞–ø–∏—Å–∏: ${state.currentRecordId || 'none'} -> ${urlInfo.recordId || 'none'}`);
    state.currentRecordId = urlInfo.recordId;
    
    // –ü—Ä–∏ —Å–º–µ–Ω–µ –∑–∞–ø–∏—Å–∏ –≤—Å–µ–≥–¥–∞ —É–¥–∞–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    if (state.mounted) {
      state.log('action', '–£–¥–∞–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–∑-–∑–∞ —Å–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏');
      cleanup();
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  const targetElement = document.querySelector(TARGET_SELECTOR);
  const existingButton = document.getElementById(ELEMENT_ID);
  
  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–∫—É—â—É—é —Å–∏—Ç—É–∞—Ü–∏—é
  state.log('check', `–°–æ—Å—Ç–æ—è–Ω–∏–µ: –∑–∞–ø–∏—Å—å=${urlInfo.isRecordPage}, —Ü–µ–ª–µ–≤–æ–π_—ç–ª–µ–º–µ–Ω—Ç=${!!targetElement}, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç=${!!existingButton}, mounted=${state.mounted}`);
  
  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º DOM
  if (!existingButton && state.mounted) {
    state.log('warn', '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∏—Å—á–µ–∑ –∏–∑ DOM, –Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ');
    state.mounted = false;
  }
  
  // –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  if (urlInfo.isRecordPage && targetElement) {
    if (!existingButton) {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
      state.log('mount', '–ú–æ–Ω—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏:', urlInfo.recordId);
      
      const container = document.createElement('div');
      container.id = ELEMENT_ID;
      container.setAttribute('data-record-id', urlInfo.recordId);
      container.setAttribute('data-instance', state.instanceId);
      container.setAttribute('data-timestamp', Date.now());
      
      targetElement.appendChild(container);
      
      try {
        new RecordButton({ target: container });
        state.mounted = true;
        state.log('success', '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω');
      } catch (err) {
        state.log('error', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:', err);
        container.remove();
      }
    } else {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç–µ–∫—É—â–µ–π –∑–∞–ø–∏—Å–∏
      const componentRecordId = existingButton.getAttribute('data-record-id');
      if (componentRecordId !== urlInfo.recordId) {
        state.log('warn', `–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –¥—Ä—É–≥–æ–π –∑–∞–ø–∏—Å–∏ (${componentRecordId} vs ${urlInfo.recordId})`);
        cleanup();
        // –ü–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
        setTimeout(() => checkAndMountIfNeeded(true), 10);
      } else {
        state.log('info', '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É–∂–µ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –¥–ª—è —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏');
      }
    }
  } else if (!urlInfo.isRecordPage && (existingButton || state.mounted)) {
    // –ù–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∑–∞–ø–∏—Å–∏, –Ω–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –µ—Å—Ç—å - —É–¥–∞–ª—è–µ–º
    state.log('action', '–ù–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–ø–∏—Å–∏ - —É–¥–∞–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç');
    cleanup();
  }
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–∏—é –ø—Ä–æ–≤–µ—Ä–æ–∫ DOM —Å –≤–æ–∑—Ä–∞—Å—Ç–∞—é—â–∏–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏
 * –ü–æ–ª–µ–∑–Ω–æ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è URL, –∫–æ–≥–¥–∞ DOM –º–æ–∂–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
 */
function scheduleChecks() {
  // –°–µ—Ä–∏—è –ø—Ä–æ–≤–µ—Ä–æ–∫ —Å —É–≤–µ–ª–∏—á–∏–≤–∞—é—â–∏–º–∏—Å—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏
  const intervals = [10, 50, 100, 250, 500, 1000, 1500];
  
  intervals.forEach((delay, index) => {
    setTimeout(() => {
      state.log('timer', `–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ #${index + 1} (${delay}ms)`);
      checkAndMountIfNeeded(true);
    }, delay);
  });
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
 */
function setupNavigationListeners() {
  // 1. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è URL —á–µ—Ä–µ–∑ History API
  const originalPushState = history.pushState;
  history.pushState = function() {
    originalPushState.apply(this, arguments);
    state.log('route', '–û–±–Ω–∞—Ä—É–∂–µ–Ω pushState');
    scheduleChecks();
  };
  
  const originalReplaceState = history.replaceState;
  history.replaceState = function() {
    originalReplaceState.apply(this, arguments);
    state.log('route', '–û–±–Ω–∞—Ä—É–∂–µ–Ω replaceState');
    scheduleChecks();
  };
  
  // 2. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–∞–∑–∞–¥/–≤–ø–µ—Ä—ë–¥
  window.addEventListener('popstate', () => {
    state.log('route', '–û–±–Ω–∞—Ä—É–∂–µ–Ω popstate');
    scheduleChecks();
  });
  
  // 3. –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π URL —á–µ—Ä–µ–∑ MutationObserver
  const urlObserver = new MutationObserver(() => {
    const currentUrl = window.location.href;
    const urlInfo = parseUrl(currentUrl);
    
    if (urlInfo.fullPath !== state.currentPath) {
      state.log('route', `–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ URL: ${state.currentPath || 'initial'} -> ${urlInfo.fullPath}`);
      state.currentPath = urlInfo.fullPath;
      scheduleChecks();
    }
  });
  
  urlObserver.observe(document, { subtree: true, childList: true });
  
  // 4. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –ø–æ —Å—Å—ã–ª–∫–∞–º
  document.addEventListener('click', (e) => {
    const link = e.target.closest('a');
    if (link && link.href && link.href.includes('/medical_records/')) {
      state.log('route', '–ö–ª–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ –∑–∞–ø–∏—Å–∏:', link.href);
      scheduleChecks();
    }
  });
  
  // 5. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ DOM - –∏—â–µ–º —Ü–µ–ª–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç
  const domObserver = new MutationObserver((mutations) => {
    const urlInfo = parseUrl(window.location.href);
    if (urlInfo.isRecordPage && !document.getElementById(ELEMENT_ID)) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—è–≤–∏–ª—Å—è –ª–∏ —Ü–µ–ª–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç
      const targetElement = document.querySelector(TARGET_SELECTOR);
      if (targetElement) {
        state.log('action', 'DOM Observer: –æ–±–Ω–∞—Ä—É–∂–µ–Ω —Ü–µ–ª–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç');
        checkAndMountIfNeeded(true);
      }
    }
  });
  
  domObserver.observe(document.body, { childList: true, subtree: true });
  
  state.log('success', '–í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @returns {Function} –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
 */
export function renderUIForRecordPage() {
  state.log('start', '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ RecordButton');
  
  // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ—Å—É—Ä—Å—ã –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –≤—ã–∑–æ–≤–µ
  cleanup();
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
  if (!window._recordButtonListenersInitialized) {
    setupNavigationListeners();
    window._recordButtonListenersInitialized = true;
  }
  
  // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å
  const urlInfo = parseUrl(window.location.href);
  state.currentPath = urlInfo.fullPath;
  state.currentRecordId = urlInfo.recordId;
  
  // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
  checkAndMountIfNeeded(true);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
  state.intervalId = setInterval(() => {
    state.log('timer', '–†–µ–≥—É–ª—è—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª—É');
    checkAndMountIfNeeded();
  }, 1000);
  
  state.log('success', '–ò–Ω—Ç–µ—Ä–≤–∞–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, ID:', state.intervalId);
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
  scheduleChecks();
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—á–∏—Å—Ç–∫–∏
  return cleanup;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('beforeunload', cleanup);

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è
state.log('info', '–ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω');
checkAndMountIfNeeded(true);